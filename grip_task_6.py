# -*- coding: utf-8 -*-
"""GRIP Task 6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N2FeBbFOXbLOBvfbwGByBHMbXKfHve9A

#**Task 6**
###**Prediction using Decision Tree  Algorithm**

Creating the Decision Tree classifier and visualize it graphically. 

‚óè The purpose is if we feed any new data to this classifier, it would be able to predict the right class accordingly.

##**Data Preprocessing**
"""

# Importing libraries in Python
from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier, export_graphviz
from io import StringIO
from IPython.display import Image
import graphviz

# Load the iris dataset
iris = load_iris()
X = iris.data
y = iris.target
target_names = iris.target_names
feature_names = iris.feature_names

# Forming the iris dataframe
df=pd.DataFrame(iris.data, columns=iris.feature_names)
print(df.head(5))

y=iris.target
print(y)

"""##**Data Exploration**"""

df.shape

df.head(150)

"""##**Data Modeling**"""

# Install required libraries
!pip install pydotplus
!apt-get install graphviz -y

# Fit a decision tree model
decision_tree = DecisionTreeClassifier()
decision_tree.fit(X, y)

# Generate DOT data
dot_data = StringIO()
export_graphviz(decision_tree, out_file=dot_data,  
                filled=True, rounded=True,
                special_characters=True, 
                feature_names = feature_names,
                class_names=target_names)

"""##**Data Visualization**"""

# Render the graph using Graphviz
graph = graphviz.Source(dot_data.getvalue())
graph.format = 'png'
graph.render('output_tree', view=True)

# Display the image
Image(filename='output_tree.png')